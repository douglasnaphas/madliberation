name: CI-feature-branch
concurrency: ci-${{ github.ref }}
on:
  push:
    branches: ["*", "!main", "!master", "!skip/*"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          persist-credentials: false
      - name: Install infra
        working-directory: infra
        run: |
          npm install
      - name: Install backend
        working-directory: backend
        run: |
          npm install
      - name: Test backend
        working-directory: backend
        run: |
          npm test
      - name: Install backend-v2
        working-directory: backend-v2
        run: |
          npm install
      - name: Test backend-v2
        working-directory: backend-v2
        run: |
          npm test
      - name: Build infra
        working-directory: infra
        run: |
          npm run build
      - name: Install content
        working-directory: content
        run: |
          npm install
      - name: Test content
        working-directory: content
        run: |
          npm test
      - name: Test infra
        working-directory: infra
        run: |
          npm test
      - name: Build backend prod artifact
        working-directory: backend
        run: |
          rm -rf node_modules
          npm install --production
      - name: Build backend-v2 prod artifact
        working-directory: backend-v2
        run: |
          rm -rf node_modules
          npm install --production
      - name: Identify dev account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
      - name: Deploy the webapp stack to dev account
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy-webapp
      - name: Deploy content (dev account)
        working-directory: content
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy
  frontend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      - name: Deploy to the frontend bucket (dev account)
        working-directory: frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run install-build-test-deploy
  frontend-create-haggadah:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Deploy to the frontend-create-haggadah bucket   (dev account)
        working-directory: frontend-create-haggadah
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets. DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets. DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
            npm run install-build-test-deploy
  itest:
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run smoke test (dev account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
        run: |
          npm run itest
