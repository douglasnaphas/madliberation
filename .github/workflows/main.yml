# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GH_REPO_PAT }}
          persist-credentials: false

      - name: Install
        run: |
          npm install

      - name: Install frontend
        working-directory: frontend
        run: |
          npm install

      - name: Install backend
        working-directory: backend
        run: |
          npm install

      - name: Build
        run: |
          npm run build

      - name: Build frontend
        working-directory: frontend
        run: |
          npm run build

      - name: Test
        run: |
          npm test

      - name: Identify test account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'

      - name: Deploy AWS resources to test account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
        run: |
          npx cdk bootstrap
          npx cdk deploy --require-approval never

      - name: Deploy to the frontend bucket (test account)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
        run: |
          bash scripts/deploy-frontend.sh

      - name: Install itest
        working-directory: itest
        run: |
          npm install

      # - name: Run integration tests, test account
      #   working-directory: scripts
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
      #     AWS_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
      #   run: |
      #     bash itest.sh

      - name: Identify prod account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'

      - name: Deploy AWS resources to prod account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
        run: |
          npx cdk bootstrap
          npx cdk deploy --require-approval never

      - name: Deploy to the frontend bucket (prod account)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
        run: |
          bash scripts/deploy-frontend.sh

      - name: Run integration tests, prod account
        working-directory: scripts
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
        run: |
          bash itest.sh
