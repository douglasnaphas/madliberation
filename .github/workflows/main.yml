name: CI
concurrency: ci-${{ github.ref }}
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  idp-app-secret-roll-call:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Identity provider app secret roll call
        working-directory: infra
        env:
          FACEBOOK_APP_SECRET: ${{ secrets.FACEBOOK_APP_SECRET }}
          GOOGLE_APP_SECRET: ${{ secrets.GOOGLE_APP_SECRET }}
          AMAZON_APP_SECRET: ${{ secrets.AMAZON_APP_SECRET }}
          APPLE_APP_SECRET: ${{ secrets.APPLE_APP_SECRET }}
        run: |
          npm install
          npx ts-node scripts/idp-app-secret-roll-call.ts
  id-account-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Identify staging account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
  id-account-prod2:
    runs-on: ubuntu-latest
    steps:
      - name: Identify staging account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
  webapp-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install backend
        working-directory: backend
        run: |
          npm install
      - name: Test backend
        working-directory: backend
        run: |
          npm test
      - name: Install backend-v2
        working-directory: backend-v2
        run: |
          npm install
      - name: Test backend-v2
        working-directory: backend-v2
        run: |
          npm test
      - name: Install infra
        working-directory: infra
        run: |
          npm install
      - name: Build infra
        working-directory: infra
        run: npm run build
      - name: Test infra
        working-directory: infra
        run: |
          npm test
      - name: Build backend prod artifact
        working-directory: backend
        run: |
          rm -rf node_modules
          npm install --production
          echo 'in backend'
          pwd
          ls
          ls node_modules
          du -hs *
      - name: Build backend-v2 prod artifact
        working-directory: backend-v2
        run: |
          rm -rf node_modules
          npm install --production
          echo 'in backend-v2'
          pwd
          ls
          ls node_modules
          du -hs *
      - name: Deploy the webapp stack to the staging account
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy-webapp
  frontend-staging:
    needs: webapp-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install, build, test, deploy
        working-directory: frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run install-build-test-deploy
  frontend-create-haggadah-staging:
    needs: webapp-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install, build, test, deploy (test account)
        working-directory: frontend-create-haggadah
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run install-build-test-deploy
  content-staging:
    runs-on: ubuntu-latest
    needs: webapp-staging
    steps:
      - uses: actions/checkout@v3
      - name: Install content
        working-directory: content
        run: |
          npm install
      - name: Test content
        working-directory: content
        run: |
          npm test
      - name: itest content (SKIP)
        working-directory: content
        run: |
          echo "Skipping, as this tests the incomplete preview-Haggadah feature"
      #          npm run it
      - name: Deploy content
        working-directory: content
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy
  itest-staging:
    needs: [frontend-staging, content-staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        working-directory: itest
        run: |
          npm install
      - name: Run
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
        run: |
          npm run itest
  itest-links-staging-2023:
    runs-on: ubuntu-latest
    needs: [frontend-staging, frontend-create-haggadah-staging, content-staging]
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run itest on the v2 link-based flow (staging account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
        run: |
          npm run itest-links
  itest-links-staging-2019-magid:
    runs-on: ubuntu-latest
    needs: [frontend-staging, frontend-create-haggadah-staging, content-staging]
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run itest on the v2 link-based flow, 2019 magid (staging account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
          PARTICIPANTS_ARG: "8"
          SCRIPT_TERM: "2019_Magid"
        run: |
          npm run itest-links
  webapp-prod2:
    needs:
      [itest-staging, itest-links-staging-2019-magid, itest-links-staging-2023]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install infra
        working-directory: infra
        run: |
          npm install
      - name: Build infra
        working-directory: infra
        run: npm run build
      - name: Build backend prod artifact
        working-directory: backend
        run: |
          rm -rf node_modules
          npm install --production
      - name: Build backend2 prod artifact
        working-directory: backend-v2
        run: |
          rm -rf node_modules
          npm install --production
      - name: Deploy the webapp stack to the prod2 account
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy-webapp
  frontend-prod2:
    needs: webapp-prod2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install, build, test, deploy
        working-directory: frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run install-build-test-deploy
  frontend-create-haggadah-prod2:
    needs: webapp-prod2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install, build, test, deploy
        working-directory: frontend-create-haggadah
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run install-build-test-deploy
  content-prod2:
    runs-on: ubuntu-latest
    needs: webapp-prod2
    steps:
      - uses: actions/checkout@v3
      - name: Install content
        working-directory: content
        run: |
          npm install
      - name: Test content
        working-directory: content
        run: |
          npm test
      - name: itest content (SKIP)
        working-directory: content
        run: |
          echo "Skipping, as this tests the incomplete preview-Haggadah feature"
      #          npm run it
      - name: Deploy content
        working-directory: content
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npm run deploy
  itest-prod2:
    needs: [frontend-prod2, content-prod2]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run integration tests, prod account
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
        run: |
          npm run itest
  itest-links-prod2-2023:
    runs-on: ubuntu-latest
    needs: [frontend-prod2, frontend-create-haggadah-prod2, content-prod2]
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run itest on the v2 link-based flow (prod2 account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
        run: |
          npm run itest-links
  itest-links-prod2-2019-magid:
    runs-on: ubuntu-latest
    needs: [frontend-prod2, frontend-create-haggadah-prod2, content-prod2]
    steps:
      - uses: actions/checkout@v3
      - name: Install itest
        working-directory: itest
        run: |
          npm install
      - name: Run itest on the v2 link-based flow, 2019 magid (prod2 account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD2_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD2_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_REGION: "us-east-1"
          PARTICIPANTS_ARG: "8"
          SCRIPT_TERM: "2019_Magid"
        run: |
          npm run itest-links
